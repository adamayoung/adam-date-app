name: CD

on:
  push:
    branches:
      - main
  workflow_dispatch:

concurrency:
  group: "build-deploy"

permissions:
  id-token: write
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
        version: ${{ steps.build.outputs.VERSION }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Create version
        id: version
        run: |
            echo "VERSION=$(date '+%Y.%m.%d.%H%M%S')" >> $GITHUB_ENV
            echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and tag Docker image
        run: |
          docker build -t ${{ vars.DOCKERHUB_USERNAME }}/adam-date-app:latest -t ${{ vars.DOCKERHUB_USERNAME }}/adam-date-app:${{ env.VERSION }} -f Dockerfile .

      - name: Push Docker image to Docker Hub
        run: |
          docker push ${{ vars.DOCKERHUB_USERNAME }}/adam-date-app:latest
          docker push ${{ vars.DOCKERHUB_USERNAME }}/adam-date-app:${{ env.VERSION }}

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Log in to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Create Resource Group
        run: az group create --name ${{ vars.RESOURCE_GROUP_NAME }} --location ${{ vars.RESOURCE_GROUP_LOCATION }}

      - name: Deploy
        uses: azure/bicep-deploy@v2
        with:
          type: deployment
          operation: create
          name: AdamDate-${{ needs.build.outputs.version }}
          location: ${{ vars.RESOURCE_GROUP_LOCATION }}
          scope: resourceGroup
          resource-group-name: ${{ vars.RESOURCE_GROUP_NAME }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          template-file: ./main.bicep
          parameters: '{"appServicePlanName":"${{ vars.APP_SERVICE_PLAN_NAME}}", "webAppName":"${{ vars.WEB_APP_NAME }}", "dockerImage":"${{ vars.DOCKERHUB_USERNAME }}/adam-date-app:${{ needs.build.outputs.version }}", "databaseServerName":"${{ vars.DATABASE_SERVER_NAME }}", "databaseUser":"${{ secrets.DATABASE_USER }}", "databasePassword":"${{ secrets.DATABASE_PASSWORD }}", "storageAccountName":"${{ vars.STORAGE_ACCOUNT_NAME }}", "jwtSecret":"${{ secrets.JWT_SECRET }}", "jwtExpiration":"${{ vars.JWT_EXPIRATION }}", "jwtIssuer":"${{ vars.JWT_ISSUER }}", "jwtAudience":"${{ vars.JWT_AUDIENCE }}"}'

      - name: Logout from Azure
        run: az logout
